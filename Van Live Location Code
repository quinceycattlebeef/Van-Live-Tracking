<!DOCTYPE html>
<html>
<head>
  <title>Live Van Map</title>
  <meta charset="utf-8" />
  <style>#map { height: 100vh; }</style>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
</head>
<body>
  <div id="map"></div>

  <script>
    const map = L.map('map').setView([29.6, -82.9], 10); // You can adjust this
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: 'Map data © OpenStreetMap contributors'
    }).addTo(map);

    const marker = L.marker([0, 0]).addTo(map).bindPopup("Van Location");

    async function fetchVanLocation() {
      try {
        const response = await fetch("https://cloud.samsara.com/o/74952/devices/281474977846515/vehicle?end_ms=1752724799999", {
          headers: {
            "Authorization": "Bearer samsara_api_bkWWHWosjQkskYV9nKHgrPf5jslE8f"
          }
        });

        if (!response.ok) {
          console.error("Failed to fetch van location");
          return;
        }

        const data = await response.json();

        // Example coordinates format: data.lastKnownLocation.lat, lon
        const lat = data?.lastKnownLocation?.lat;
        const lon = data?.lastKnownLocation?.lon;

        if (lat && lon) {
          marker.setLatLng([lat, lon]);
          marker.getPopup().setContent(`Van is here: (${lat.toFixed(5)}, ${lon.toFixed(5)})`);
          map.setView([lat, lon]); // Optional: remove if you don’t want auto-centering
        } else {
          console.log("Coordinates not found in API response");
        }
      } catch (error) {
        console.error("Error fetching van location:", error);
      }
    }

    // Initial fetch
    fetchVanLocation();

    // Refresh every 10 seconds
    setInterval(fetchVanLocation, 10000);
  </script>
</body>
</html>
