<!DOCTYPE html>
<html>
<head>
  <title>Live Van Location</title>
  <meta charset="utf-8" />
  <style>
    #map { height: 100vh; width: 100vw; margin: 0; padding: 0; }
    html, body { height: 100%; margin: 0; }
  </style>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
</head>
<body>
  <div id="map"></div>

  <script>
    const map = L.map('map').setView([29.6, -82.9], 10); // Adjust if needed
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: 'Map data Â© OpenStreetMap contributors'
    }).addTo(map);

    let liveLayer = null;

    async function fetchVanLocation() {
      try {
        const response = await fetch("https://cloud.samsara.com/o/74952/devices/281474977846515/vehicle?end_ms=1752724799999", {
          headers: {
            "Authorization": "Bearer samsara_api_bkWWHWosjQkskYV9nKHgrPf5jslE8f"
          }
        });

        if (!response.ok) {
          console.error("Failed to fetch location");
          return;
        }

        const data = await response.json();
        const lat = data?.lastKnownLocation?.lat;
        const lon = data?.lastKnownLocation?.lon;

        if (lat && lon) {
          const geojsonFeature = {
            type: "Feature",
            geometry: {
              type: "Point",
              coordinates: [lon, lat]
            },
            properties: {
              title: "Live Van Location"
            }
          };

          // Remove previous marker
          if (liveLayer) {
            map.removeLayer(liveLayer);
          }

          // Add new marker
          liveLayer = L.geoJSON(geojsonFeature, {
            onEachFeature: function (feature, layer) {
              if (feature.properties && feature.properties.title) {
                layer.bindPopup(feature.properties.title);
              }
            }
          }).addTo(map);

          map.setView([lat, lon]);
        } else {
          console.warn("No location data found.");
        }
      } catch (err) {
        console.error("Error fetching van location:", err);
      }
    }

    fetchVanLocation(); // First load
    setInterval(fetchVanLocation, 10000); // Refresh every 10 seconds
  </script>
</body>
</html>
